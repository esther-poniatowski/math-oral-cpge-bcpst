#####################################################################
# CONFIGURATION FILE FOR CHKTEX (LaTeX linting tool)
######################################################################
##  INITIAL TEMPLATE
##  Copyright (C) 1995-96 Jens T. Berger Thielemann
##  License: GNU General Public License
##  Contact the author at:
##      Jens Berger
##      Spektrumvn. 4
##      N-0666 Oslo
##      Norway
##      E-mail: <jensthi@ifi.uio.no>
##
## For more information visit https://www.nongnu.org/chktex/
##
#   ESSENTIAL MODIFICATIONS
# - In the section CmdLine: Added the -n44 option to suppress warnings
#   from user-defined regexes.
# - In the section UserWarnRegex: Added a regular expression to catch
#   the use of $$...$$ for display math (to be replaced by \[...\]).
# - Reformulated the comments and explanations.
#
#
# SILENCING WARNINGS INLINE
# -------------------------
# To suppress specific warnings on individual lines, use:
# % chktex <warning-number> t
#
#
# GENERAL SYNTAX
# --------------
#
# KEYWORD = item
#
# KEYWORD { item item ...} [ item item ... ] /* Adds items */
#
# KEYWORD [ item item ...] { item item ... } /* Adds items */
#
# KEYWORD = { item item ... } /* Clears list before adding */
#
# KEYWORD = [ item item ... ] /* Clears list before adding */
#
# Warning; Certain keywords  demands  a  list, other a single value.
# Look at the examples of their use.
#
# Notes:
# - Comments begin with `#', and continue for the rest of the line.
# - Blank lines plus leading and trailing spaces are ignored.
# - Items are separated by spaces. Newlines are considered as spaces,
#   but cannot be escaped.
# - To put spaces into items, surroundthose items with quotes (`"').
# - { ... } syntax : Case-sensitive comparing
# - [ ... ] syntax : Case-insensitive comparing of the keywords.
# - Case-insensitive comparing of the keywords is only supported on a
#   of the keywords (not meaningful in all contexts and slows ChkTeX down)
#   Keywords supporting this are marked throughout the file.
# - If a list-keyword is specified twice, both lists will be concatenated.
# - If a item-keyword is specified twice, the previous value will be killed.
# - Tokens like "}" and "]" are context-sensitive and have to be preceded
#   by a space (or newline).
#
#
# ESCAPE SEQUENCES AVAILABLE
# --------------------------
#
#   Sequence        Resulting character
#   !               A space (type `! ', not just a exclamation mark)
#   !"              "
#   !#              #
#   !!              !
#   !{              {
#   !}              }
#   ![              [
#   !]              ]
#   !=              =
#   !b              Backspace
#   !n              New line
#   !r              Carriage return
#   !t              Tab
#   !f              Form feed
#   !xNN            NN must be a hexadecimal number (00 - ff),
#                   _both_ characters must be included.
#   !dNNN           DDD must be a decimal number (000 - 255), all
#                   three characters must be included. Unspecified
#                   results if DDD > 255.
#   !NNN            DDD must be a octal number (000 - 377), all
#                   three characters must be included. Unspecified
#                   results if DDD > 377.
#
#
# SUMMARY OF KEYWORDS
# -------------------
# Keywords marked with a * accept keywords accepting case-insensitive lists.
#
#   Abbrev*     - List of abbreviations not automatically caught.
#   CenterDots  - Commands/characters  which  should  have  \cdots in
#                 between.
#   CmdLine     - Default   commandline   options.    These  will  be
#                 processed before those passed on the command line.
#   HyphDash   \
#   NumDash     - Number of dashes allowed in different contexts.
#   WordDash   /
#   IJAccent    - Commands   which   puts   an  accent  _over_  their
#                 argument.
#   Italic      - Commands immediately turning on italic mode.
#   ItalCmd     - Commands putting their argument into italic.
#   Linker      - Commands  which should have a non-breaking space in
#                 front.
#   LowDots     - Commands/characters  which  should  have  \ldots in
#                 between.
#   MathEnvir   - Environments which turn on math mode.
#   MathCmd     - Commands which turn on math mode.
#   TextCmd     - Commands which turn off math mode.
#   MathRoman   - Mathematical   operators   with  LaTeX  replacement
#                 defined.
#   NoCharNext  - Insists on that certain commands are not followed by
#                 certain characters.
#   NonItalic   - Commands immediately turning off italic mode.
#   NotPreSpaced- Commands  which should not have a space in front of
#                 them.
#   Primitives  - Primitive TeX commands.
#   PostLink    - Commands which generates a page reference.
#   OutFormat   - Formats  to use for output.  See the -f & -v switch
#                 in the main doc.
#   QuoteStyle  - Either  "Traditional"  or "Logical".  See main doc,
#                 warning 38.
#   Silent      - These  commands  do not produce any textual output;
#                 and are thus allowed to have a space after them.
#   TabSize     - Tab size.
#   TeXInputs   - Paths to search \input and \include files for.
#   UserWarn*   - Strings that will be searched for throughout the
#                 text.
#   VerbEnvir   - Environments which contents should be ignored.
#   VerbClear   - String that will be used to overwrite unwanted data.
#   WipeArg     - Commands  (with  arguments) which should be ignored
#                 in the checking.
#

#####################################################################
# QuoteStyle
#
# Type of quote-style to use.
#
# Supported styles:
#
#  Style        Example of use
#  Traditional  "An example," he said, "would be great."
#  Logical      "An example", he said, "would be great".
#

QuoteStyle = Logical

#####################################################################
# TabSize
#
# Width of a tab. Used for formatting the error message.
# Only regular intervals and positive integers are supported.
#

TabSize = 8

#####################################################################
# CmdSpaceStyle
#
# How to treat a command is followed by punction.  In all cases the
# warnings are also governed by the main warning settings, namely
# warnings 12 and 13 about interword and intersentence spacings.
#
# - If set to Ignore, then it will not print any warnings when
#   pucntuation follows a command.
# - If set to InterWord, then it will print warnings when interword
#   spacing should (potentially) be used.
# - If set to InterSentence, then it will print warnings when
#   intersentence spacing should (potentially) be used.
# - If set to Both, it will cause warnings to be printed in
#   both cases.
#
# Examples:
# Without a command,  the following will trigger warning 12:
#
#     `I've seen a UFOs, etc. in my life.'
#
# If set to InterWord, so will:
#
#     `I've seen a UFOs, \etc. in my life.'
#
# Without a command, the following will trigger warning 13
#
#     `I've seen an UFO! Right over there!'
#
# And if set to InterSentence, so will:
#
#     `I've seen an \UFO! Right over there!'
#
#

CmdSpaceStyle = Ignore

#####################################################################
# CmdLine
#
# Enter default commandline options.
#
# Examples:
# -v2: to get the fancy output.
# -n44: to suppress warnings from user-defined regexes.
#

CmdLine
{
 #-n44
}

#####################################################################
# UserWarn
#
# Arbitrary strings to warn about.
# Those patterns will be searched for through the text, no matter
# whether they appear as normal text, commands, arguments, math mode, etc.
# They are *not* found in comments.
# Currently case-sensitive.
#
# Example: Define a special command to indicate some information which
# is not available at the moment of writing (to be able to search for it).
#
# \def\unknown{\large\bf??}
#
# Example: Impose to write \chktex or Chk\TeX - never ChkTeX.
#

UserWarn
{
    \unknown
    ChkTeX
}
[
# Case-insensitive patterns
]

#####################################################################
# UserWarnRegex
#
# More sophisticated version of UserWarn using regular expressions
# (_not_ match in verbatim environments).
#
# Automatically disabled if ChkTeX was built without regular expression support.
# Because ChkTeX  POSIX or PCRE flavors of regular expressions, some of the
# following will not apply in all cases.
# - PCRE (Perl-Compatible Regular Expressions), prefixed with PCRE:.
# - POSIX regex flavors, prefixed with POSIX:.
#
# Escape (with a !) the following characters if they are preceeded by a space:
#    "#!=
#     spaces
#     {}[]
#
# Custom warning messages:
# Add an explanation in (?# ... ) to display about the problem to fix.
# Example: (?#Explain! this! warning).
#
# Case insensitivity:
# When using PCRE regular expressions, use (?i) to make the expression case insensitive.
#
# Note: Some the features of perl regular expression are not available, such
# as running code (callouts), and replacing.
#
# For documentation on the regular expression syntax, see the man pages
# (man pcresyntax) or http://perldoc.perl.org/perlre.html
#
# Example: To catch the use of the word "intro" in the text and ask to spell it out:
# PCRE:(?i)\bintro\b(?!#Spell! it! out.! This! comment! is! not! used.)
# POSIX:([^[:alnum:]]|^)intro([^[:alnum:]]|$)

UserWarnRegex
{

  # Math delimiters - Use \[...\] instead of $$...$$
  (?!#Use! \(! \)...! instead! of! $...$)\$[^$\n]*\$
  (?!#Use! \[...\]! instead! of! $$...$$)\$\$[^$\n]*\$\$

  # Capitalize sections
  (?!#-1:Capitalize! before! references)PCRE:\b(chapter|(sub)?section|theorem|lemma|proposition|corollary|appendix)~\\ref
  (?!#1:Capitalize! before! references)POSIX:([^[:alnum:]]|^)(chapter|(sub)?section|theorem|lemma|proposition|corollary|appendix)~\\ref

  # Pretty tables - See http://texdoc.net/texmf-dist/doc/latex/booktabs/booktabs.pdf
  (?!#-2:Use! \toprule,! midrule,! or! \bottomrule! from! booktabs)\\hline
  # This relies on it being on a single line, and not having anything else on that line.
  (?!#-2:Vertical! rules! in! tables! are! discouraged)\\begin\{(array|tabularx?\*?)\}(\[.*\])?\{.*\|.*\}
}

#####################################################################
# TeXInputs
#
# List the path of where ChkTeX should look for files it \inputs.
#
# The  // postfix is now supported.
# If a a double path-separator is appended, the linter will
# recursively search that directory directories.
# MS-DOS users must append \\ instead, e.g.  "C:\EMTEX\\".
#
# Under either MS-DOS or UNIX, to search an entire partition or the
# complete directory tree, use *three* slashes, e.g. "c:\\\" or "///".
# This may be considered to be a bug.
#
# By default, the linter searches the current directory (not recursively,
# unless  "//"  is in the list). Any paths specified below will be
# searched in addition to this.
#

TeXInputs
{

}

#####################################################################
# OutFormat
#
# Output formats which can be selected from the command-line.
# Specify more output formats for use with the -v option,
# which simply indexes into this list.

# Reminder: Use ! as escape character instead of \.
#
# For explanation of how % fields expand: look at ChkTeX.{dvi,ps,pdf}.
#
# By default, the linter will select entry number _two_ in this list
# (count is from 0), and -v without any parameter selects entry number _three_.
#

OutFormat
{

# -v0; silent mode
%f%b%l%b%c%b%n%b%m!n

# -v1; normal mode
"%k %n in %f line %l: %m!n%r%s%t!n%u!n"

# -v2; fancy mode
"%k %n in %f line %l: %m!n%r%i%s%I%t!n!n"

# -v3; lacheck mode
"!"%f!", line %l: %m!n"

# -v4; verbose lacheck mode
"!"%f!", line %l: %m!n%r%s%t!n%u!n"

# -v5; no line number, ease auto-test
"%k %n in %f: %m!n%r%s%t!n%u!n"

# -v6; emacs compilation mode
"!"%f!", line %l.%c:(#%n) %m!n"

}

#####################################################################
# Silent
#
# Commands which should not trigger a warning if terminated by a space.
# This warning will not trigger in math mode.
#
# [] section : Specify regular expressions in case many custom macros
#              can be safely terminated with a space.
# {} section : Specify regular expressions in case many custom macros
#              share a common prefix.
#
Silent
{
    \rm \em \bf \it \sl \sf \sc \tt \selectfont
    \rmfamily \sffamily \ttfamily \mdseries \bfseries
    \slshape \scshape \relax
    \vskip \pagebreak \nopagebreak

    \textrm \textem \textbf \textit \textsl \textsf \textsc \texttt

    \clearpage \ddots \dotfill \flushbottom \fussy \indent \linebreak
    \onecolumn \pagebreak \pushtabs \poptabs \scriptsize \sloppy
    \twocolumn \vdots
    \today \kill \newline \thicklines \thinlines

    \columnsep \space \item \tiny \footnotesize \small \normalsize
    \normal \large \Large \LARGE \huge \Huge \printindex

    \newpage \listoffigures \listoftables \tableofcontents
    \maketitle \makeindex

    \hline \hrule \vrule

    \centering

    \bigskip \medskip \smallskip

    \noindent \expandafter

    \makeatletter \makeatother

    \columnseprule

    \textwidth \textheight \hsize \vsize

    \if \fi \else

    \csname \endcsname

    \z@ \p@ \@warning \typeout

    \dots \ldots \input \endinput \nextline \leavevmode \cdots
    \appendix \listfiles \and \quad
    \hskip \vfill \vfil \hfill \hfil \topmargin \oddsidemargin
    \frenchspacing \nonfrenchspacing
    \begingroup \endgroup \par

    \vrefwarning \upshape \headheight \headsep \hoffset \voffset
    \cdot \qquad
    \left \right
    \qedhere

    \xspace

    \addlinespace \cr \fill \frontmatter
    \toprule \midrule \bottomrule

}[

# Support ConTeXt to at least some extent
\\start.* \\stop.*

]

#####################################################################
# HyphDash, NumDash, WordDash
#
# Specify the length of various dashes (i.e. number of dashes allowed
# between two characters of a certain type).
#
# The linter sorts the dash according to the type of characters that
# are on the left and right of it, and is only conclusive if they are
# the same.
#
#     Name        Type of character on each side
#     HyphDash    Alphabetic (foo-bar)
#     NumDash     Numeric (2--3)
#     WordDash    Space (like this --- see?)
#
# Note: NumDash does _not_ apply in math mode.
#
# Specify how many dashes which are legal in each case.
# It is possible to specify more than one legal dash-length.
# 0 is defined as a magic constant which always generates an error.
#
# Example: To use the following dash-syntax:
#
#     foo-bar
#     2--3
#     like this---see?
#
# HYPHDASH { 1 3 }        # Either a hyphen, or inter-word
# NUMDASH { 2 }           # Between words
# WORDDASH { 0 }          # Never use this
#

HyphDash
{
    1 3
}

NumDash
{
    2
}

WordDash
{
    3
}

#####################################################################
# DashExcpt
#
# Indicate exceptions to the dash rules above.
#
# Use this as an alternative to line suppressions for patterns that
# are used often.  This is case-sensitive.
#
# Example: An n-dash -- between words is usually wrong, but in some
# cases it is correct, such as when naming a theorem.
# The Birch--Swinnerton-Dyer conjecture is one example where the difference
# matters: Birch is one person and Swinnerton-Dyer is another.
#

DashExcpt
{
}

#####################################################################
# WipeArg
#
# Commands whose argument is not LaTeX code, and thus should be
# ignored.
#
# After the command, it is possible to place arguments that should be
# wiped s (separated from the command with a colon). Use:
# - [] for optional arguments
# - {} for required arguments
# - *  if the command supports an alternative variant
# - () for optional arguments that are delimited by parentheses
#      in certain commands (e.g.  \cmidrule)
#
# Example: To wipe the \newcommand command, declare it as
# \newcommand:*[][]{}
# since it has a star variant, two optional arguments, and one required argument.
#
# These  commands may be "executed" (evaluated) before they are wiped, so it is
# common to also list filehandling commands and similar here.
#

WipeArg
{
    \label:{} \ref:{} \eqref:{} \vref:{} \pageref:{} \index:[]{}
    \cite:[][]{} \nocite:{}
    \input:{} \verbatiminput:[]{} \listinginput:[]{}{}
    \graphicspath:{}
    \verbatimtabinput:[]{} \include:{} \includeonly:{}
    \bibitem:[]{}
    \cline:{} \cmidrule:[](){}
    \href:{}{}
    # Cleveref
    \cref:*{} \cpageref:*{} \crefrange:*{}{} \cpagerefrange:*{}{}
    \Cref:*{} \Cpageref:*{} \Crefrange:*{}{} \Cpagerefrange:*{}{}
    # natbib
    \citet:*[][]{} \citep:*[][]{} \citealt:*{} \citealp:*[]{} \citeauthor:*{}
    \Citet:*[][]{} \Citep:*[][]{} \Citealt:*{} \Citealp:*[]{} \Citeauthor:{}
    \citetext:{} \citeyear:*{} \citeyearpar:{}
    # biblatex - not including special commands
    \autocite:*[][]{} \autocites:*[][]{} \Autocite:*[][]{} \Autocites:*[][]{}
    \parencite:*[][]{} \parencites:*[][]{} \Parencite:*[][]{} \Parencites:*[][]{}
    \footcite:*{} \footcites:*[][]{} \Footcite:*[][]{} \Footcites:*[][]{}
    \textcite:*{} \textcites:*[][]{} \Textcite:*[][]{} \Textcites:*[][]{}
    \citeauthor:*{} \citeauthors:*[][]{} \Citeauthor:*[][]{} \Citeauthors:*[][]{}
    \citeyear:*{} \citeyears:*[][]{} \Citeyear:*[][]{} \Citeyears:*[][]{}
    \citetitle:*{} \citetitles:*[][]{} \Citetitle:*[][]{} \Citetitles:*[][]{}
    # tipa which uses "
    \textipa:{}
    # LuaTeX
    \directlua:{} \luaescapestring:{}
}

#####################################################################
# MathEnvir
#
# Environments which typeset their contents as mathematics.
# This turns on/off some warnings.
#
# A `*' variant is automatically added for each keyword.

MathEnvir
{
    displaymath math eqnarray array equation
    align alignat gather flalign multline
    dmath dgroup darray
}

#####################################################################
## TextEnvir
#
# Environments which typeset their contents as text, for use inside
# mathematics.  This turns on/off some warnings.
#
TextEnvir
{
    dsuspend
}

#####################################################################
# MathCmd
#
# Commands whose argument will be typeset as mathematics.
# The commands are assumed to have one mandatory argument which is in
# math mode.  This turns on/off some warnings.

MathCmd
{
    \ensuremath
}

#####################################################################
# TextCmd
#
# Commands whose argument will *not* be typeset as mathematics even if
# it would otherwise be in math mode.
# The commands are assumed to have one mandatory argument which is in
# text mode.  This turns on/off some warnings.

TextCmd
{
    \text \intertext \shortintertext \mbox \condition
}

#####################################################################
# VerbEnvir
#
# Environments containing non-LaTeX content of some kind, and therefore
# should not trigger any warnings.
#
# A `*' variant is automatically added for each keyword.

VerbEnvir
{
    verbatim comment listing verbatimtab rawhtml errexam picture texdraw
    filecontents pgfpicture tikzpicture minted lstlisting IPA ignore
}

#####################################################################
# Abbrev
#
# Abbreviations not automatically handled by ChkTeX.
#
# As ChkTeX does automagically catch most abbreviations, the
# abbreviations listed here are those which are most likely to be
# followed by a word with an upper-case letter (that is not the
# beginning of a new sentence).
#
# The case-insensitive abbreviations are not really case-insensitive,
# it seems to be more  practical to  only let  the first character be
# case-insensitive, while the remaining are case-sensitive.
#
# To  speed  up the searching process, the linter requires that these
# end in a `.'.
#
# Contributor: Russ Bubley, <russ@scs.leeds.ac.uk>.
#

Abbrev
{
# Ordinals
1st. 2nd. 3rd. 4th.
# Titles
Mr. Mrs. Miss. Ms. Dr. Prof. St.

#
# Days
# Mon. Tue. Wed. Thu. Fri. Sat. Sun.
#
# Months
# Jan. Feb. Mar. Apr. May. Jun. Jul. Aug. Sep. Oct. Nov. Dec.
#
# Letters
# Kt. Jr.
#
# Corporate
# Co. Ltd.
#
# Addresses
# Rd. Dr. St. Ave. Cres. Gdns. Sq. Circ. Terr. Pl. Arc. La. Clo. Ho. Est. Gn.
#
# Misc.
# oe. pbab. ps. rsvp. Tx.
}
[
###
#
# Case-insensitive abbreviations (first letter)
# Due to the nature of the checking algorithm used for
# this, entries consisting of only one character will be
# silently ignored.
#
##

# Latin
# cf. "et al." etc. qed. qv. viz.
#
# Corporate
# inc. plc.
#
# Misc
# fax. pcs. qty. tel. misc.
]

#####################################################################
# IJAccent
#
# Commands which add accents above characters.  This means that `\i' or `\j'
# (`\imath' and `\jmath' in mathmode) should be used instead of `i' and `j'.
#
# Other accent commands such as `\c', `\d', and `\b', put their accent under
# the character, and thus should be used with normal `i's and `j's.
#

IJAccent
{
    \hat \check \breve \acute \grave \tilde \bar \vec \dot \ddot

    \' \` \^ \" \~ \= \. \u \v \H \t
}

# ' #(to retrieve syntax highlighting in this file)
#####################################################################
# Italic
#
# Commands which need italic correction when the group is terminated.
#

Italic
{
    \it \em \sl
    \itshape \slshape
}

#####################################################################
# NonItalic
#
# Commands which makes the font non-italic.
#

NonItalic
{
    \bf \rm \sf \tt \sc
    \upshape
}

#####################################################################
# ItalCmd
#
# Commands which  put their argument  into italic (and thus possibly
# needs italic correction in the end).
#
# This is currently empty, since `\textit', `\textsl', and `\emph'
# automatically add italic corecction.
#

ItalCmd
{
}

#####################################################################
# PostLink
#
# Commands in front of which a page break is highly undesirable.
# Thus there should be no space in front of them.
#

PostLink
{
    \index \label
}

#####################################################################
# NotPreSpaced
#
# Commands that should not have a space in front of them for various
# reasons. This behavior is similar to PostLink, but produces a
# different warning.
#

NotPreSpaced
{
    \footnote \footnotemark \/
}

#####################################################################
# Linker
#
# Commands that should be prepended with a `~'.

# Example:
#     `look in table~\ref{foo}'
# to avoid the references being split across lines.
#

Linker
{
    \ref \vref \pageref \eqref \cite
}

#####################################################################
# CenterDots
#
# Commands or characters which should have `\cdots' in between.
# Example: $1+2+3+\cdots+n$.
#

CenterDots
{
    = + - \cdot \div & \times \geq \leq < >
}

#####################################################################
# LowDots
#
# Commands or characters which should have `\ldots' in between.
# Example: $1,2,3,\ldots,n$.
#
LowDots
{
    . , ;
}

#####################################################################
# MathRoman
#
# Words that should appear in roman (upright) in math mode.

# There are certain aliases for mathematical operators (like sin or cos)
# that appear in roman rather than the usual italic (slanted) font.
# These entries do not need a leading slash since the mistake is often
# to *not* include the leading slash.
#

MathRoman
{
    log lg ln lim limsup liminf sin arcsin sinh cos arccos cosh tan
    arctan tanh cot coth sec csc max min sup inf arg ker dim hom det
    exp Pr gcd deg bmod pmod mod
}

#####################################################################
# Primitives
#
# Commands that are used in TeX but have become unnecessary in
# LaTeX, as there are LaTeX commands which do the same.  Purists
# should thus avoid these in their code.
#
# (These are a spell-corrected version of those lacheck uses).
#

Primitives
{
   \above \advance \catcode \chardef \closein \closeout \copy \count
   \countdef \cr \crcr \csname \delcode \dimendef \dimen \divide
   \expandafter \font \hskip \vskip \openout
}


#####################################################################
# NoCharNext
#
# Commands and a set of characters that should *not* follow them.
#
# Example: In math mode, `\left' should be followed by a delimiter
# which is to change size. Therefore, it should not be followed by the
# end of math mode `$' or a grouping character `{' or `}'.
#
# Format: \command:characters
#
# A warning will be emitted if any of characters are found after the
# command.
#

NoCharNext
{
   \left:{}$ \right:{}$
}

#####################################################################
# VerbClear
#
# Character to replace verbatim text with.
#
# The arguments of commands listed in WipeArg, as well as
# `\verb+...+' commands, are replaced with an innocuous character
# to prevent that data from inadvertantly producing a warning.
#
# This should not contain:
# - An alphabetic character (in case the user writes (\foo\verb+bar+),
# - One of LaTeX's reserved characters (`#$%&~_^\{}'),
# - A parenthesis character ('()[]{}').
# - A punctuation character
# - A spacing character
# - An asterisk (unsuitable since some commands behave in differently
#   if they are  appended with an asterisk).
# All of these characters have warnings associated with them and thus
# could cause spurious warnings to appear.
# Advice: Use the pipe.
#
# Note; This  may  also  be  a  _string_, which will be
# repeated until the proper length is reached.
#

VerbClear = "|"
